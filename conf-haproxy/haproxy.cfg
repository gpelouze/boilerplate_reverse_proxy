global
	fd-hard-limit 50000
	log stderr local0
	log stderr local1 notice
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

	# Enable the HAProxy Runtime API
	stats socket :9999 level admin expose-fd listeners

defaults
	log global
	mode http
	option httplog
	option dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000

resolvers docker
	nameserver dns 127.0.0.11:53

frontend https-in
	mode http
	bind :443 ssl crt /etc/ssl/private/
	# Edit to change default backend cluster
	default_backend default

frontend http-in
	mode http
	bind :80
	# Rule to match ACME challenges from LetsEncrypt
	acl acme_challenge path_beg /.well-known/acme-challenge/
	# Redirect non-ACME, HTTP traffic to HTTPS
	redirect scheme https if !{ ssl_fc } !acme_challenge
	# Send ACME challenge requests to certbot backend
	use_backend certbot if acme_challenge
	# HAProxy health endpoint
	monitor-uri /health

backend certbot
	server certbot certbot_letsencrypt:80 resolvers docker

backend default
	server my_hostname 10.0.0.1:443 ssl ca-file /etc/ssl/backend-certs/my-default-backend-certificates/
